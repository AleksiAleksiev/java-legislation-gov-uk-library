//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.07 at 06:17:52 PM CEST 
//


package org.purl.dc.terms;

import org.purl.dc.elements._1.AbstractAny;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.purl.dc.terms package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _License_QNAME = new QName("http://purl.org/dc/terms/", "license");
    private final static QName _ConformsTo_QNAME = new QName("http://purl.org/dc/terms/", "conformsTo");
    private final static QName _TableOfContents_QNAME = new QName("http://purl.org/dc/terms/", "tableOfContents");
    private final static QName _DateCopyrighted_QNAME = new QName("http://purl.org/dc/terms/", "dateCopyrighted");
    private final static QName _AccrualPolicy_QNAME = new QName("http://purl.org/dc/terms/", "accrualPolicy");
    private final static QName _AccrualMethod_QNAME = new QName("http://purl.org/dc/terms/", "accrualMethod");
    private final static QName _Medium_QNAME = new QName("http://purl.org/dc/terms/", "medium");
    private final static QName _Spatial_QNAME = new QName("http://purl.org/dc/terms/", "spatial");
    private final static QName _DateSubmitted_QNAME = new QName("http://purl.org/dc/terms/", "dateSubmitted");
    private final static QName _References_QNAME = new QName("http://purl.org/dc/terms/", "references");
    private final static QName _AccrualPeriodicity_QNAME = new QName("http://purl.org/dc/terms/", "accrualPeriodicity");
    private final static QName _Created_QNAME = new QName("http://purl.org/dc/terms/", "created");
    private final static QName _HasVersion_QNAME = new QName("http://purl.org/dc/terms/", "hasVersion");
    private final static QName _Mediator_QNAME = new QName("http://purl.org/dc/terms/", "mediator");
    private final static QName _Provenance_QNAME = new QName("http://purl.org/dc/terms/", "provenance");
    private final static QName _DateAccepted_QNAME = new QName("http://purl.org/dc/terms/", "dateAccepted");
    private final static QName _Available_QNAME = new QName("http://purl.org/dc/terms/", "available");
    private final static QName _IsRequiredBy_QNAME = new QName("http://purl.org/dc/terms/", "isRequiredBy");
    private final static QName _BibliographicCitation_QNAME = new QName("http://purl.org/dc/terms/", "bibliographicCitation");
    private final static QName _Extent_QNAME = new QName("http://purl.org/dc/terms/", "extent");
    private final static QName _IsFormatOf_QNAME = new QName("http://purl.org/dc/terms/", "isFormatOf");
    private final static QName _Valid_QNAME = new QName("http://purl.org/dc/terms/", "valid");
    private final static QName _IsReferencedBy_QNAME = new QName("http://purl.org/dc/terms/", "isReferencedBy");
    private final static QName _IsVersionOf_QNAME = new QName("http://purl.org/dc/terms/", "isVersionOf");
    private final static QName _AccessRights_QNAME = new QName("http://purl.org/dc/terms/", "accessRights");
    private final static QName _Temporal_QNAME = new QName("http://purl.org/dc/terms/", "temporal");
    private final static QName _HasPart_QNAME = new QName("http://purl.org/dc/terms/", "hasPart");
    private final static QName _Abstract_QNAME = new QName("http://purl.org/dc/terms/", "abstract");
    private final static QName _Audience_QNAME = new QName("http://purl.org/dc/terms/", "audience");
    private final static QName _HasFormat_QNAME = new QName("http://purl.org/dc/terms/", "hasFormat");
    private final static QName _EducationLevel_QNAME = new QName("http://purl.org/dc/terms/", "educationLevel");
    private final static QName _RightsHolder_QNAME = new QName("http://purl.org/dc/terms/", "rightsHolder");
    private final static QName _IsReplacedBy_QNAME = new QName("http://purl.org/dc/terms/", "isReplacedBy");
    private final static QName _IsPartOf_QNAME = new QName("http://purl.org/dc/terms/", "isPartOf");
    private final static QName _Alternative_QNAME = new QName("http://purl.org/dc/terms/", "alternative");
    private final static QName _InstructionalMethod_QNAME = new QName("http://purl.org/dc/terms/", "instructionalMethod");
    private final static QName _Requires_QNAME = new QName("http://purl.org/dc/terms/", "requires");
    private final static QName _Modified_QNAME = new QName("http://purl.org/dc/terms/", "modified");
    private final static QName _Replaces_QNAME = new QName("http://purl.org/dc/terms/", "replaces");
    private final static QName _Issued_QNAME = new QName("http://purl.org/dc/terms/", "issued");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.purl.dc.terms
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RFC3066 }
     * 
     */
    public RFC3066 createRFC3066() {
        return new RFC3066();
    }

    /**
     * Create an instance of {@link Period }
     * 
     */
    public Period createPeriod() {
        return new Period();
    }

    /**
     * Create an instance of {@link DDC }
     * 
     */
    public DDC createDDC() {
        return new DDC();
    }

    /**
     * Create an instance of {@link ElementOrRefinementContainer }
     * 
     */
    public ElementOrRefinementContainer createElementOrRefinementContainer() {
        return new ElementOrRefinementContainer();
    }

    /**
     * Create an instance of {@link TGN }
     * 
     */
    public TGN createTGN() {
        return new TGN();
    }

    /**
     * Create an instance of {@link ISO3166 }
     * 
     */
    public ISO3166 createISO3166() {
        return new ISO3166();
    }

    /**
     * Create an instance of {@link MESH }
     * 
     */
    public MESH createMESH() {
        return new MESH();
    }

    /**
     * Create an instance of {@link Box }
     * 
     */
    public Box createBox() {
        return new Box();
    }

    /**
     * Create an instance of {@link IMT }
     * 
     */
    public IMT createIMT() {
        return new IMT();
    }

    /**
     * Create an instance of {@link W3CDTF }
     * 
     */
    public W3CDTF createW3CDTF() {
        return new W3CDTF();
    }

    /**
     * Create an instance of {@link LCC }
     * 
     */
    public LCC createLCC() {
        return new LCC();
    }

    /**
     * Create an instance of {@link ISO6392 }
     * 
     */
    public ISO6392 createISO6392() {
        return new ISO6392();
    }

    /**
     * Create an instance of {@link LCSH }
     * 
     */
    public LCSH createLCSH() {
        return new LCSH();
    }

    /**
     * Create an instance of {@link UDC }
     * 
     */
    public UDC createUDC() {
        return new UDC();
    }

    /**
     * Create an instance of {@link RFC1766 }
     * 
     */
    public RFC1766 createRFC1766() {
        return new RFC1766();
    }

    /**
     * Create an instance of {@link Point }
     * 
     */
    public Point createPoint() {
        return new Point();
    }

    /**
     * Create an instance of {@link DCMIType }
     * 
     */
    public DCMIType createDCMIType() {
        return new DCMIType();
    }

    /**
     * Create an instance of {@link URI }
     * 
     */
    public URI createURI() {
        return new URI();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "license", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "rights")
    public JAXBElement<AbstractAny> createLicense(AbstractAny value) {
        return new JAXBElement<>(_License_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "conformsTo", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createConformsTo(AbstractAny value) {
        return new JAXBElement<>(_ConformsTo_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "tableOfContents", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "description")
    public JAXBElement<AbstractAny> createTableOfContents(AbstractAny value) {
        return new JAXBElement<>(_TableOfContents_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateCopyrighted", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createDateCopyrighted(AbstractAny value) {
        return new JAXBElement<>(_DateCopyrighted_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualPolicy", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createAccrualPolicy(AbstractAny value) {
        return new JAXBElement<>(_AccrualPolicy_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualMethod", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createAccrualMethod(AbstractAny value) {
        return new JAXBElement<>(_AccrualMethod_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "medium", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "format")
    public JAXBElement<AbstractAny> createMedium(AbstractAny value) {
        return new JAXBElement<>(_Medium_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "spatial", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "coverage")
    public JAXBElement<AbstractAny> createSpatial(AbstractAny value) {
        return new JAXBElement<>(_Spatial_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateSubmitted", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createDateSubmitted(AbstractAny value) {
        return new JAXBElement<>(_DateSubmitted_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "references", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createReferences(AbstractAny value) {
        return new JAXBElement<>(_References_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualPeriodicity", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createAccrualPeriodicity(AbstractAny value) {
        return new JAXBElement<>(_AccrualPeriodicity_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "created", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createCreated(AbstractAny value) {
        return new JAXBElement<>(_Created_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasVersion", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createHasVersion(AbstractAny value) {
        return new JAXBElement<>(_HasVersion_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "mediator", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "audience")
    public JAXBElement<AbstractAny> createMediator(AbstractAny value) {
        return new JAXBElement<>(_Mediator_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "provenance", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createProvenance(AbstractAny value) {
        return new JAXBElement<>(_Provenance_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateAccepted", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createDateAccepted(AbstractAny value) {
        return new JAXBElement<>(_DateAccepted_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "available", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createAvailable(AbstractAny value) {
        return new JAXBElement<>(_Available_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isRequiredBy", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsRequiredBy(AbstractAny value) {
        return new JAXBElement<>(_IsRequiredBy_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "bibliographicCitation", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "identifier")
    public JAXBElement<AbstractAny> createBibliographicCitation(AbstractAny value) {
        return new JAXBElement<>(_BibliographicCitation_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "extent", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "format")
    public JAXBElement<AbstractAny> createExtent(AbstractAny value) {
        return new JAXBElement<>(_Extent_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isFormatOf", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsFormatOf(AbstractAny value) {
        return new JAXBElement<>(_IsFormatOf_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "valid", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createValid(AbstractAny value) {
        return new JAXBElement<>(_Valid_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isReferencedBy", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsReferencedBy(AbstractAny value) {
        return new JAXBElement<>(_IsReferencedBy_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isVersionOf", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsVersionOf(AbstractAny value) {
        return new JAXBElement<>(_IsVersionOf_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accessRights", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "rights")
    public JAXBElement<AbstractAny> createAccessRights(AbstractAny value) {
        return new JAXBElement<>(_AccessRights_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "temporal", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "coverage")
    public JAXBElement<AbstractAny> createTemporal(AbstractAny value) {
        return new JAXBElement<>(_Temporal_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasPart", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createHasPart(AbstractAny value) {
        return new JAXBElement<>(_HasPart_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "abstract", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "description")
    public JAXBElement<AbstractAny> createAbstract(AbstractAny value) {
        return new JAXBElement<>(_Abstract_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "audience", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createAudience(AbstractAny value) {
        return new JAXBElement<>(_Audience_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasFormat", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createHasFormat(AbstractAny value) {
        return new JAXBElement<>(_HasFormat_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "educationLevel", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "audience")
    public JAXBElement<AbstractAny> createEducationLevel(AbstractAny value) {
        return new JAXBElement<>(_EducationLevel_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "rightsHolder", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createRightsHolder(AbstractAny value) {
        return new JAXBElement<>(_RightsHolder_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isReplacedBy", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsReplacedBy(AbstractAny value) {
        return new JAXBElement<>(_IsReplacedBy_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isPartOf", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createIsPartOf(AbstractAny value) {
        return new JAXBElement<>(_IsPartOf_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "alternative", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "title")
    public JAXBElement<AbstractAny> createAlternative(AbstractAny value) {
        return new JAXBElement<>(_Alternative_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "instructionalMethod", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<AbstractAny> createInstructionalMethod(AbstractAny value) {
        return new JAXBElement<>(_InstructionalMethod_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "requires", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createRequires(AbstractAny value) {
        return new JAXBElement<>(_Requires_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "modified", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createModified(AbstractAny value) {
        return new JAXBElement<>(_Modified_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "replaces", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "relation")
    public JAXBElement<AbstractAny> createReplaces(AbstractAny value) {
        return new JAXBElement<>(_Replaces_QNAME, AbstractAny.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractAny }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "issued", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "date")
    public JAXBElement<AbstractAny> createIssued(AbstractAny value) {
        return new JAXBElement<>(_Issued_QNAME, AbstractAny.class, null, value);
    }

}
