//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.07 at 06:17:52 PM CEST 
//


package org.w3._1999.xsl.format;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TableBorderStyleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TableBorderStyleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="inherit"/>
 *     &lt;enumeration value="solid"/>
 *     &lt;enumeration value="dashed"/>
 *     &lt;enumeration value="dotted"/>
 *     &lt;enumeration value="double"/>
 *     &lt;enumeration value="groove"/>
 *     &lt;enumeration value="inset"/>
 *     &lt;enumeration value="outset"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TableBorderStyleType", namespace = "http://www.w3.org/1999/XSL/Format")
@XmlEnum
public enum TableBorderStyleType {

    @XmlEnumValue("inherit")
    INHERIT("inherit"),
    @XmlEnumValue("solid")
    SOLID("solid"),
    @XmlEnumValue("dashed")
    DASHED("dashed"),
    @XmlEnumValue("dotted")
    DOTTED("dotted"),
    @XmlEnumValue("double")
    DOUBLE("double"),
    @XmlEnumValue("groove")
    GROOVE("groove"),
    @XmlEnumValue("inset")
    INSET("inset"),
    @XmlEnumValue("outset")
    OUTSET("outset");
    private final String value;

    TableBorderStyleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TableBorderStyleType fromValue(String v) {
        for (TableBorderStyleType c: TableBorderStyleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
