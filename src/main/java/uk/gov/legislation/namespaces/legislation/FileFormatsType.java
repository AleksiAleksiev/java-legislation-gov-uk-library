//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.07 at 06:17:52 PM CEST 
//


package uk.gov.legislation.namespaces.legislation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FileFormatsType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FileFormatsType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="doc"/>
 *     &lt;enumeration value="eps"/>
 *     &lt;enumeration value="gif"/>
 *     &lt;enumeration value="html"/>
 *     &lt;enumeration value="jpeg"/>
 *     &lt;enumeration value="mpeg"/>
 *     &lt;enumeration value="png"/>
 *     &lt;enumeration value="rtf"/>
 *     &lt;enumeration value="svg"/>
 *     &lt;enumeration value="xml"/>
 *     &lt;enumeration value="pdf"/>
 *     &lt;enumeration value="tiff"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FileFormatsType")
@XmlEnum
public enum FileFormatsType {

    @XmlEnumValue("doc")
    DOC("doc"),
    @XmlEnumValue("eps")
    EPS("eps"),
    @XmlEnumValue("gif")
    GIF("gif"),
    @XmlEnumValue("html")
    HTML("html"),
    @XmlEnumValue("jpeg")
    JPEG("jpeg"),
    @XmlEnumValue("mpeg")
    MPEG("mpeg"),
    @XmlEnumValue("png")
    PNG("png"),
    @XmlEnumValue("rtf")
    RTF("rtf"),
    @XmlEnumValue("svg")
    SVG("svg"),
    @XmlEnumValue("xml")
    XML("xml"),
    @XmlEnumValue("pdf")
    PDF("pdf"),
    @XmlEnumValue("tiff")
    TIFF("tiff"),
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    FileFormatsType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FileFormatsType fromValue(String v) {
        for (FileFormatsType c: FileFormatsType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
